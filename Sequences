function Solve(params) {
	var N = parseInt(params[0]);
	var count = 1;
	var last = parseInt(params[1]);
	for (var i = 2; i <= N; i++) {
		var current = parseInt(params[i]);
		if (current < last) {
			count++;
		}
		last = current;
	}
	return count;
}
//You are given an integer array arr, consisting of N integers. Find the number of non-decreasing consecutive subsequences in arr. Every 
//sequence starts after the previous one. For example: if the array arr consists of the numbers 1, 2, -3, 4, 4, 0, 1, the number of 
//non-decreasing consecutive subsequences is 3 (the first is 1, 2, the second is -3, 4, 4 and the third is 0, 1) 
//The method Solve accepts a zero-based array of strings. Each of the string represents an integer. Element 0 of the array is the number N.
//Next N elements (from 1 to N) construct the array arr.
//Example input	Example output
7
1
2
-3
4
4
0
1	                  3
Example input	Example output
6
1
3
-5
8
7
-6	              4

